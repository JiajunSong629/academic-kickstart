blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library(tidyverse)
library(knitr)
library(kableExtra)
prostate <- read_delim("data/prostate.data",
"\t", escape_double = FALSE, trim_ws = TRUE) %>%
select(- X1)
head(prostate)
X <- prostate %>%
select(- c("train", "lpsa"))
p <- ncol(X)
prostate %>%
select(- c("train", "lpsa")) %>%
cor() %>%
.[2:p, 1:(p-1)]
prostate %>%
select(- c("train", "lpsa")) %>%
cor() %>%
.[2:p, 1:(p-1)] %>%
kable()
prostate %>%
select(- c("train", "lpsa")) %>%
cor() %>%
.[2:p, 1:(p-1)] %>%
kable(format = "latex")
prostate %>%
select(- c("train", "lpsa")) %>%
cor() %>%
.[2:p, 1:(p-1)] %>%
kable(format = "markdown")
prostate %>%
select(- c("train", "lpsa")) %>%
cor() %>%
.[2:p, 1:(p-1)] %>%
kable(format = "html")
X <- prostate %>%
select(- c("train", "lpsa")) %>%
scale(T, T)
View(X)
p <- ncol(X)
prostate %>%
select(- c("train", "lpsa")) %>%
cor() %>%
.[2:p, 1:(p-1)] %>%
kable(format = "html")
X %>%
select(- c("train", "lpsa")) %>%
cor() %>%
.[2:p, 1:(p-1)] %>%
kable(format = "html")
X %>%
cor() %>%
.[2:p, 1:(p-1)] %>%
kable(format = "html")
X <- prostate %>%
select(- c("train", "lpsa")) %>%
scale(T, T)
p <- ncol(X)
X %>%
cor() %>%
.[2:p, 1:(p-1)] %>%
kable(format = "html")
View(X)
View(prostate)
X <- prostate %>%
select(- c("train", "lpsa")) %>%
scale(T, T)
Xtrain = X[X$train]
Xtrain = X[X$train, ]
Xtrain = X[X$train, :]
X$train
X
X <- prostate %>%
select(- c("train", "lpsa"))
X
Xtrain <- filter(prostate, train)
Xtest <- filter(prostate, !train)
Xtrain <- filter(prostate, train) %>% select(-train)
Xtest <- filter(prostate, !train) %>% select(-train)
Xtrain <- filter(prostate, train) %>% select(-c(train, lpsa))
Xtest <- filter(prostate, !train) %>% select(-c(train, lpsa))
Xtrain <- filter(prostate, train) %>% select(-c(train, lpsa))
ytrain <- filter(prostate, train) %>% select(lpsa)
Xtest <- filter(prostate, !train) %>% select(-c(train, lpsa))
ytest <- filter(prostate, !train) %>% select(lpsa)
Xp <- scale(Xtrain, TRUE, TRUE) %>%
cor()
Xp
View(Xp)
print(round(Xp, 3))
library(xtable)
xtable(Xp, digits = 3)
Xtrain <- filter(prostate, train) %>% select(-c(train, lpsa))
ytrain <- filter(prostate, train) %>% select(lpsa)
Xtest <- filter(prostate, !train) %>% select(-c(train, lpsa))
ytest <- filter(prostate, !train) %>% select(lpsa)
Xp <- scale(Xtrain, TRUE, TRUE) %>%
cor()
#print(round(Xp, 3))
xtable(Xp, digits = 3)
blogdown:::serve_site()
print(xtable(Xp, digits = 3), type = "html")
Xtrain <- filter(prostate, train) %>% select(-c(train, lpsa))
ytrain <- filter(prostate, train) %>% select(lpsa)
Xtest <- filter(prostate, !train) %>% select(-c(train, lpsa))
ytest <- filter(prostate, !train) %>% select(lpsa)
Xp <- scale(Xtrain, TRUE, TRUE) %>%
cor()
#print(round(Xp, 3))
print(xtable(Xp, digits = 3), type = "html")
#print(round(Xp, 3))
print(xtable(Xp, digits = 3), type = "latex")
#print(round(Xp, 3))
#print(xtable(Xp, digits = 3), type = "latex")
kable(Xp, digits = 3, format = "latex")
Xtrain <- filter(prostate, train) %>% select(-c(train, lpsa))
ytrain <- filter(prostate, train) %>% select(lpsa)
Xtest <- filter(prostate, !train) %>% select(-c(train, lpsa))
ytest <- filter(prostate, !train) %>% select(lpsa)
Xp <- scale(Xtrain, TRUE, TRUE) %>%
cor()
print(round(Xp, 3))
summary(prostate)
install.packages("GGally")
library(GGally)
ggpairs(Xtrain)
Xtrain <- filter(prostate, train) %>% select(-c(train, lpsa))
ytrain <- filter(prostate, train) %>% select(lpsa)
Xtest <- filter(prostate, !train) %>% select(-c(train, lpsa))
ytest <- filter(prostate, !train) %>% select(lpsa)
Xp <- scale(Xtrain, TRUE, TRUE)
print(round(cor(Xp), 3))
Xp
as.matrix(Xp)
nrow(Xp)
cbind(matrix(1, nrow(Xp)), as.matrix(Xp))
Xp_ <- cbind(matrix(1, nrow(Xp)), as.matrix(Xp))
Xp_ <- cbind(matrix(1, nrow(Xp)), as.matrix(Xp))
beta_hat = solve(t(Xp_) %*% Xp_) %*% t(Xp_) %*% as.matrix(ytrain)
View(beta_hat)
beta_hat = ginv(t(Xp_) %*% Xp_) %*% t(Xp_) %*% as.matrix(ytrain)
beta_hat = solve(t(Xp_) %*% Xp_) %*% t(Xp_) %*% as.matrix(ytrain)
beta_hat
View(Xp)
View(Xp_)
Xp_ <- cbind(matrix(1, nrow(Xp), 1), as.matrix(Xp))
beta_hat = solve(t(Xp_) %*% Xp_) %*% t(Xp_) %*% as.matrix(ytrain)
beta_hat
round(beta_hat, digits = 2)
Xtrain <- filter(prostate, train) %>% select(-c(train, lpsa))
ytrain <- filter(prostate, train) %>% select(lpsa)
Xtest <- filter(prostate, !train) %>% select(-c(train, lpsa))
ytest <- filter(prostate, !train) %>% select(lpsa)
Xp <- scale(Xtrain, TRUE, TRUE)
print(round(cor(Xp), 3))
Xp_ <- cbind(matrix(1, nrow(Xp), 1), as.matrix(Xp))
beta_hat = solve(t(Xp_) %*% Xp_) %*% t(Xp_) %*% as.matrix(ytrain)
beta_hat
yp <- scale(ytrain, TRUE, TRUE)
beta_hat = solve(t(Xp_) %*% Xp_) %*% t(Xp_) %*% as.matrix(yp)
beta_hat
Xp <- scale(Xtrain, TRUE, TRUE)
beta_hat = solve(t(Xp_) %*% Xp_) %*% t(Xp_) %*% as.matrix(ytrain)
beta_hat
df <- data.frame(cbind(Xp_, ytrain))
View(df)
df <- data.frame(cbind(Xp, ytrain))
lm_obj <- lm(lpsa ~ ., data = df)
summary(lm_obj)
beta_hat
Xp
lapply(Xp, FUN = var)
lapply(Xp, function(i) var(i))
dim(Xp)
prostate <- read_delim("data/prostate.data",
"\t", escape_double = FALSE, trim_ws = TRUE) %>%
select(- X1)
summary(prostate)
Xtrain <- filter(prostate, train) %>% select(-c(train, lpsa))
ytrain <- filter(prostate, train) %>% select(lpsa)
Xtest <- filter(prostate, !train) %>% select(-c(train, lpsa))
ytest <- filter(prostate, !train) %>% select(lpsa)
Xp <- scale(Xtrain, TRUE, TRUE)
print(round(cor(Xp), 3))
df <- data.frame(cbind(Xp, ytrain))
lm_obj <- lm(lpsa ~ ., data = df)
summary(lm_obj)
View(prostate)
df <- data.frame(cbind(Xtrain, ytrain))
lm_obj <- lm(lpsa ~ ., data = df)
summary(lm_obj)
View(df)
df <- data.frame(cbind(Xp, ytrain))
lm_obj <- lm(lpsa ~ ., data = df)
summary(lm_obj)
apply(Xtrain, 2, function(i) sd(i))
apply(Xp, 2, function(i) sd(i))
apply(Xp, 2, function(i) mean(i))
read.table("data/prostate.data")
prostate <- read.table("data/prostate.data")
View(prostate)
summary(prostate)
X <- prostate %>% select(-c(train, lpsa))
X <- scale(X, center = TRUE, scale = TRUE)
Xtrain <- X[prostate$train, ]
Xtest <- X[!prostate$train, ]
y <- prostate %>% select(lpsa)
X <- scale(X, center = TRUE, scale = TRUE)
Xtrain <- X[prostate$train, ]
Xtest <- X[!prostate$train, ]
ytrain <- y[prostate$train, ]
ytest <- y[!prostate$train, ]
print(round(cor(Xtrain), 3))
Xp <- cbind(matrix(1, nrow(Xtrain), 1), as.matrix(Xtrain))
beta_hat = solve(t(Xp) %*% Xp) %*% t(Xp) %*% as.matrix(ytrain)
beta_hat
prostate <- read.table("data/prostate.data")
#summary(prostate)
X <- prostate %>% select(-c(train, lpsa))
X <- scale(X, center = TRUE, scale = TRUE)
y <- prostate %>% select(lpsa)
nrow, p = dim(X)
c(nrow, p) = dim(X)
nrow = dim(X)[0]
p = dim(X)[1]
dim(X)
dim(X)[1]
nrow = dim(X)[1]
p = dim(X)[2]
y <- prostate %>% select(lpsa) %>% as.matrix()
nrow = dim(X)[1]
p = dim(X)[2]
Xtrain <- X[prostate$train, ]
Xtest <- X[!prostate$train, ]
ytrain <- y[prostate$train, ]
ytest <- y[!prostate$train, ]
print(round(cor(Xtrain), 3))
Xp <- cbind(matrix(1, nrow, 1), Xtrain)
nrow
nrow = dim(Xtrain)[1]
nrow <- dim(Xtrain)[1]
p <- dim(Xtrain)[2]
a, b <- dim(X)
c(a, b) <- dim(X)
Xp <- cbind(matrix(1, nrow, 1), Xtrain)
beta_hat <- solve(t(Xp) %*% Xp) %*% t(Xp) %*% ytrain
ypred <- cbind(matrix(1, nrow(Xtest), 1), Xtest) %*% beta_hat
rss <- sum((ypred - ytest)^2)
sigma_hat <- rss / (nrow(Xtest) - p - 1)
ypred <- Xp %*% beta_hat
sigma_hat <- sum((ypred - ytrain)^2) / (nrow - p - 1)
sd <- sigma2_hat * diag(solve(t(Xp) %*% Xp))
sigma2_hat <- sum((ypred - ytrain)^2) / (nrow - p - 1)
sd <- sigma2_hat * diag(solve(t(Xp) %*% Xp))
sd
nrow
p
sd <- sqrt(sigma2_hat * diag(solve(t(Xp) %*% Xp)))
sd
print(round(sd, 2))
se <- sqrt(sigma2_hat * diag(solve(t(Xp) %*% Xp)))
print(round(se, 2))
print(round(beta_hat/se, 2))
attributes(Xp)
data.frame(cbind(beta_hat, se, beta/se))
cbind(beta_hat, se, beta/se)
cbind(beta_hat, se, beta_hat/se)
rownames(se)
attributes(se)
names(se)
c("Intercept", names(se))
c("Intercept", names(se)[2:])
c("Intercept", names(se)[1:])
c("Intercept", names(se)[1,])
names(se)
names(se)[1:7]
names(se)[2:7]
names(se)[2:,]
names(se)[2:]
names(se)[2:-1]
names(se)[2:]
names(se)[-1]
data.frame(cbind(beta_hat, se, beta_hat/se),
row.names = c("Intercept", names(se)[-1]))
data.frame(cbind(beta_hat, se, beta_hat/se),
dimnames = list(c("Intercept", names(se)[-1]),
c("Coefficient", "Std. Err", "Z Score")))
data.frame(
matrix(cbind(beta_hat, se, beta_hat/se), dimnames = list(c("Intercept", names(se)[-1]),
c("Coefficient", "Std. Err", "Z Score")))
)
names(Xp)
dimnames(Xp)
dimnames(Xp)[2]
dimnames(Xp)[[2]]
data.frame(
matrix(cbind(beta_hat, se, beta_hat/se)),
row.names = c("Intercept", names(se)[-1])
)
c("Intercept", names(se)[-1])
data.frame(
cbind(beta_hat, se, beta_hat/se),
row.names = c("Intercept", names(se)[-1])
)
colnames(lm_summary) <- c("Coefficient", "Std. Err", "Z Score")
lm_summary <- data.frame(
cbind(beta_hat, se, beta_hat/se),
row.names = c("Intercept", names(se)[-1])
)
colnames(lm_summary) <- c("Coefficient", "Std. Err", "Z Score")
lm_summary
kable(lm_summary)
kable(lm_summary, digits = 2)
sum((ypred - ytrain)^2)
var(ytrain)
var(ytrain) * nrow(ytrain)
attributes(ytrain)
nrow(ytrain)
n(ytrain)
ytrain
as.matrix(ytrain)
attributes(as.matrix(ytrain))
kable(lm_summary, digits = 2)
Xp
df <- as.data.frame(cbind(Xtrain, ytrain))
View(df)
y <- prostate %>% select(lpsa)
ytrain <- y[prostate$train, ]
ytest <- y[!prostate$train, ]
df <- as.data.frame(cbind(Xtrain, ytrain))
View(df)
y
ytrain
ytrain <- y[prostate$train]
y <- prostate %>% select(lpsa)
ytrain <- y[prostate$train]
ytrain <- y[prostate$train, ]
ytrain
subset(y, prostate$train)
subset(y, !prostate$train)
Xtrain <- subset(X, prostate$train)
Xtest <- subset(X, !prostate$train)
ytrain <- subset(y, prostate$train)
ytest <- subset(y, !prostate$train)
nrow <- dim(Xtrain)[1]
p <- dim(Xtrain)[2]
Xp <- cbind(matrix(1, nrow, 1), Xtrain)
beta_hat <- solve(t(Xp) %*% Xp) %*% t(Xp) %*% ytrain
Xp
ytrain
beta_hat <- solve(t(Xp) %*% Xp) %*% t(Xp) %*% as.matrix(ytrain)
ypred <- Xp %*% beta_hat
sigma2_hat <- sum((ypred - ytrain)^2) / (nrow - p - 1)
se <- sqrt(sigma2_hat * diag(solve(t(Xp) %*% Xp)))
lm_summary <- data.frame(
cbind(beta_hat, se, beta_hat/se),
row.names = c("Intercept", names(se)[-1])
)
colnames(lm_summary) <- c("Coefficient", "Std. Err", "Z Score")
kable(lm_summary, digits = 2)
df <- as.data.frame(cbind(Xtrain, ytrain))
full_lm <- lm(lpsa ~ ., data = df)
sub_lm <- lm(lpsa ~ . -age-lcp-gleason-pgg45, data = df)
attributes(full_lm)
full_lm$residuals
attributes(full_lm)
full_lm$df.residual
sub_lm$df.residual
sub_lm$df
full_lm <- lm(lpsa ~ ., data = df)
sub_lm <- lm(lpsa ~ . -age-lcp-gleason-pgg45, data = df)
full_rss <- sum(full_lm$residuals^2)
sub_rss <- sum(sub_lm$residuals^2)
Fstat <- ((sub_rss - full_rss) / (sub_lm$df - full_lm$df)) / (full_rss / full_lm$df)
Fstat
full_rss
sub_rss
sub_lm$df - full_lm$df.residual
full_lm$df
((sub_rss - full_rss) / 4) / (full_rss / 58)
qf(0.025, df1 = sub_lm$df - full_lm$df, df2 = full_lm$df)
qf(0.975, df1 = sub_lm$df - full_lm$df, df2 = full_lm$df)
pf(Fstat, df1 = sub_lm$df - full_lm$df, df2 = full_lm$df)
pf(Fstat, df1 = sub_lm$df - full_lm$df, df2 = full_lm$df, lower.tail = F)
print("F-statistic is", Fstat)
print(c("F-statistic is", Fstat))
print(sprintf("F-statistic is %.3f", Fstat))
print(sprintf("F-statistic is %.2f", Fstat))
print(sprintf("Pr(F(%d, %d) > %.2f) = .2f", sub_lm$df-full_lm$df, full_lm$df, pval))
pval <- pf(Fstat, df1 = sub_lm$df - full_lm$df, df2 = full_lm$df, lower.tail = F)
print(sprintf("F-statistic is %.2f", Fstat))
print(sprintf("Pr(F(%d, %d) > %.2f) = .2f", sub_lm$df-full_lm$df, full_lm$df, pval))
print(sprintf("Pr(F(%d, %d) > %.2f) = %.2f", sub_lm$df-full_lm$df, full_lm$df, pval))
print(sprintf("Pr(F(%d, %d) > %.2f) = .2f", sub_lm$df-full_lm$df, full_lm$df, pval))
print(sprintf("Pr(F(%d, %d) > %.2f) = %.2f", sub_lm$df-full_lm$df, full_lm$df, Fstat, pval))
ypred_test <- predict(full_lm, Xtest)
Xtest
ypred_test <- predict(full_lm, as.data.frame(Xtest))
ypred_test
mean_test_err <- mean((ypred_test - ytest)^2)
ypred_test
ytest
mean_test_err
ytest
class(ytest)
mean_test_err <- mean((ypred_test - as.matrix(ytest))^2)
mean_test_err
base_err <- mean((ytest - mean(ytrain))^2)
base_err <- mean((ytest - mean(as.matrix(ytrain)))^2)
mean(ytrain)
ytrain
base_err <- mean((ytest - mean(ytrain$lpsa))^2)
ytrain$lpsa
mean(ytrain$lpsa)
base_err <- mean((as.matrix(ytest) - mean(ytrain$lpsa))^2)
base_err
print("Mean prediction error is %.2f, Base error is %.2f", mean_pred_err, base_err)
ypred_test <- predict(full_lm, as.data.frame(Xtest))
mean_pred_err <- mean((ypred_test - as.matrix(ytest))^2)
base_err <- mean((as.matrix(ytest) - mean(ytrain$lpsa))^2)
print("Mean prediction error is %.2f, Base error is %.2f", mean_pred_err, base_err)
print(sprintf("Mean prediction error is %.2f, Base error is %.2f", mean_pred_err, base_err))
print(sprintf("Mean prediction error is %.3f, Base error is %.3f", mean_pred_err, base_err))
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
here::here()
gapminder::gapminder
prostate_raw <- read.table(here::here("static", "data", "prostate.data"))
blogdown:::serve_site()
